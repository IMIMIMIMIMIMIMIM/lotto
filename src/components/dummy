import React, { useState, useEffect } from "react";

const App = () => {
  const [round, setRound] = useState(1); // 라운드 상태 변수
  const [timer, setTimer] = useState(5);
  const [randomNumber, setRandomNumber] = useState(null);
  const [userInput, setUserInput] = useState("");
  const [result, setResult] = useState("");
  const [savedNumber, setSavedNumber] = useState(null);
  const [showNumber, setShowNumber] = useState(false);
  const [roundList, setRoundList] = useState([]); // 라운드 결과 배열

  useEffect(() => {
    if (timer === 0) {
      const generatedNumber = Math.floor(Math.random() * 3); // 0부터 9까지의 랜덤 숫자 생성
      setRandomNumber(generatedNumber);
      setShowNumber(true);
      setTimer(5);

      if (savedNumber !== null) {
        // 타이머가 끝나고 저장된 숫자가 있다면 비교
        const roundResult = savedNumber === generatedNumber ? "O" : "X";

        // 라운드 결과를 배열에 추가
        setRoundList((prevRoundList) => [
          ...prevRoundList,
          {
            round,
            chosenNumber: savedNumber,
            generatedNumber,
            result: roundResult,
          },
        ]);

        setSavedNumber(null); // 저장된 숫자 초기화
      }

      // 라운드 번호 증가
      setRound((prevRound) => prevRound + 1);
    }
  }, [timer, round, savedNumber]);

  const handleInputChange = (event) => {
    setUserInput(event.target.value);
  };

  const handleSubmit = (event) => {
    event.preventDefault();
    const inputNumber = parseInt(userInput);
    setUserInput("");

    if (timer > 0) {
      // 타이머가 끝나기 전에 숫자를 입력했을 때 저장
      setSavedNumber(inputNumber);
    } else {
      // 타이머가 이미 끝났을 때 숫자를 입력하면 비교
      const roundResult = inputNumber === randomNumber ? "O" : "X";

      // 라운드 결과를 배열에 추가
      setRoundList((prevRoundList) => [
        ...prevRoundList,
        {
          round,
          chosenNumber: inputNumber,
          generatedNumber: randomNumber,
          result: roundResult,
        },
      ]);
    }
  };

  useEffect(() => {
    const interval = setInterval(() => {
      setTimer((prevTimer) => prevTimer - 1);
    }, 1000);

    return () => {
      clearInterval(interval);
    };
  }, []);

  return (
    <div>
      <h1>숫자 맞추기 게임</h1>
      <form onSubmit={handleSubmit}>
        <label>
          값 입력:
          <input type="number" value={userInput} onChange={handleInputChange} />
        </label>
        <button type="submit">확인</button>
      </form>
      <p>라운드: {round}</p>
      <p>타이머: {timer}</p>
      {showNumber && <p>랜덤 숫자: {randomNumber}</p>}
      <p>결과: {result}</p>

      <h2>라운드 결과</h2>
      <table>
        <thead>
          <tr>
            <th>라운드</th>
            <th>선택한 숫자</th>
            <th>추첨된 숫자</th>
            <th>결과</th>
          </tr>
        </thead>
        <tbody>
          {roundList.map((roundData, index) => (
            <tr key={index}>
              <td>{roundData.round}</td>
              <td>{roundData.chosenNumber}</td>
              <td>{roundData.generatedNumber}</td>
              <td>{roundData.result}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default App;
